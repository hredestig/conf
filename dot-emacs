;-*- lisp -*-
(load-file "~/.emacs.d/emacs-init.el")

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-section-hook (quote (LaTeX-section-heading LaTeX-section-title LaTeX-section-section)))
 '(auto-compression-mode t nil (jka-compr))
 '(c-basic-offset 2)
 '(case-fold-search t)
 '(current-language-environment "UTF-8")
 '(default-input-method "rfc1345")
 '(elscreen-last-message "You cannot escape from screen 0!" t)
 '(elscreen-tab-display-control nil)
 '(ess-r-args-electric-paren t)
 '(ess-roxy-hide-show-p t)
 '(ess-roxy-start-hidden-p t)
 '(ess-roxy-str "#'")
 '(ess-roxy-template-alist (list (cons "description" "") (cons "param" "") (cons "return" "") (cons "export" "") (cons "author" ess-user-full-name)))
 '(global-font-lock-mode t nil (font-lock))
 '(highline-face (quote secondary-selection))
 '(highline-ignore-regexp "Faces\\|Colors\\|Minibuf\\|rTran.Rt\\|\\*.+")
 '(iswitchb-default-method (quote samewindow))
 '(iswitchb-mode t)
 '(jira-url "http://jira.be.bayercropscience:8080/jira/rpc/xmlrpc")
 '(jiralib-url "http://jira.be.bayercropscience")
 '(org-agenda-dim-blocked-tasks t)
 '(org-agenda-files (quote ("~/workspace/personal/DataAnalysis/ortho/doc/ortho.org" "~/workspace/personal/DataAnalysis/wheat-expression-atlas/doc/summary.org" "~/.org-jira/RPHENOP.org" "~/workspace/personal/DataAnalysis/multi-crop-moa/doc/multi-crop-moa.org" "~/workspace/personal/private/notes/time.org" "~/workspace/personal/private/notes/general.org" "~/workspace/personal/private/notes/BIO1-SUP.org" "~/workspace/personal/private/notes/BIO1-311.org" "~/workspace/personal/private/notes/BIO1-258.org" "~/workspace/personal/private/notes/BIO1-118.org" "~/workspace/personal/private/notes/BIO1-032.org" "~/workspace/personal/DataAnalysis/wheat-expression-atlas/doc/expression-atlas.org" "~/workspace/personal/DataAnalysis/phytotonics-nanocage/doc/nanocage-main.org" "~/workspace/personal/DataAnalysis/arath-transcriptome/doc/arath-transcriptome.org" "~/.org-jira/RRCSNP.org" "~/proj/049rice/heterosis-cor/doc/het-rehyb.org" "/data/run/Projects/Arabidopsis/BIO1-032/nativecold/doc/nativecold.org" "~/proj/032stress/reverse/doc/validate-modules.org" "~/proj/049rice/doc/rice.org" "/home/gbfjc/proj/032stress/doc/stress.org" "/home/gbfjc/proj/049rice/doc/rice.org")))
 '(org-agenda-include-diary t)
 '(org-babel-load-languages (quote ((emacs-lisp . t) (perl . t) (python . t) (R . t) (sh . t))))
 '(org-confirm-babel-evaluate nil)
 '(org-default-notes-file "~/notes/notes.org")
 '(org-directory "~/notes")
 '(org-empty-line-terminates-plain-lists t)
 '(org-enforce-todo-dependencies t)
 '(org-export-babel-evaluate nil)
 '(org-file-apps (quote ((auto-mode . emacs) ("\\.mm\\'" . default) ("\\.x?html?\\'" . default) ("\\.pdf\\'" . "xpdf %s") ("\\.png\\'" . "display %s"))))
 '(org-from-is-user-regexp "\\<Henning Redestig\\>")
 '(org-hide-block-startup t)
 '(org-link-file-path-type (quote relative))
 '(org-list-empty-line-terminates-plain-lists t)
 '(org-log-done nil)
 '(org-src-window-setup (quote current-window))
 '(org-tag-alist nil)
 '(org-todo-keywords (quote ((sequence "TODO(t)" "STARTED(s!)" "WAIT(w@/!)" "|" "DONE(d!)" "CANCELED(c@)"))))
 '(orgtbl-optimized nil)
 '(reftex-plug-into-AUCTeX t t)
 '(rst-adornment-faces-alist (quote ((t . font-lock-keyword-face) (nil . font-lock-keyword-face) (1 . rst-level-6-face) (2 . rst-level-6-face) (3 . rst-level-6-face) (4 . rst-level-6-face) (5 . rst-level-6-face) (6 . rst-level-6-face))))
 '(safe-local-variable-values (quote ((eval rename-buffer "empty.org") (eval rename-buffer "project-name.org") (eval rename-buffer "my-buffer-name-here"))))
 '(show-paren-mode t nil (paren))
 '(sql-sqlite-program "sqlite3")
 '(tab-width 4)
 '(transient-mark-mode t)
 '(vc-follow-symlinks t))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:background nil :foreground "white"))))
 '(bm-fringe-face ((t (:foreground "#ff8e43"))))
 '(cd-fixme-face ((t (:background "#670000" :foreground "#ffffff" :bold t :box (:line-width 1 :style released-button)))) t)
 '(cd-org-cancelled-kwd-face ((t (:background "#777700" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(cd-org-delegated-kwd-face ((t (:background "#BB9900" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(cd-org-done-kwd-face ((t (:background "#004400" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(cd-org-project-kwd-face ((t (:background "#774488" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(cd-org-someday-kwd-face ((t (:background "#444444" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(cd-org-started-kwd-face ((t (:background "#EE6600" :foreground "white" (\` @box)))) t)
 '(cd-org-todo-kwd-face ((t (:background "#BB0000" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(cd-org-waiting-kwd-face ((t (:background "#EE9900" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(compilation-error ((t (:background "sienna4" :bold t))))
 '(compilation-info ((t (:inherit (quote font-lock-string-face) :bold t))))
 '(compilation-line-number ((t (:foreground "#FF6666" :bold t))))
 '(completion-dynamic-face ((t (:inherit (\` match)))))
 '(confluence-panel-face ((t (:background "cyan"))))
 '(cursor ((t (:background "#77AA99" :foreground "black"))))
 '(diff-added ((t (:foreground "#d7ffaf"))))
 '(diff-changed ((t (:foreground "#ffc28d"))))
 '(diff-context ((t (:foreground "#888888"))))
 '(diff-indicator-added ((t (:background "#d7ffaf" :foreground "#000000"))))
 '(diff-indicator-chnaged ((t (:background "#ffc28d" :foreground "#000000"))))
 '(diff-indicator-removed ((t (:background "#ff9999" :foreground "#000000"))))
 '(diff-removed ((t (:foreground "#ff9999"))))
 '(ecb-default-highlight-face ((t (:background "#A5F26E" :foreground "#000000"))))
 '(elscreen-tab-background-face ((t (:background "#787878" :box (:line-width 1 :style released-button)))))
 '(elscreen-tab-current-screen-face ((t (:background "#969696" :foreground "#000000" :height 1.1 :inherit variable-pitch))))
 '(elscreen-tab-other-screen-face ((t (:background "#787878" :foreground "#444444" :height 1.1 :inherit variable-pitch))))
 '(erb-comment-delim-face ((t (:foreground "#B150E7" :background "grey15"))))
 '(erb-comment-face ((t (:italic t :foreground "#B150E7" :background "grey15"))))
 '(erb-delim-face ((t (:foreground "#FFAEEA" :background "grey15"))))
 '(erb-face ((t (:background "grey15"))))
 '(erb-out-delim-face ((t (:foreground "#FFAEEA" :background "grey15"))))
 '(erb-out-face ((t (:background "grey15"))))
 '(erc-input-face ((t (:foreground "#A6E2DC"))))
 '(erc-my-nick-face ((t (:foreground "#888888" :bold t))))
 '(erc-notice-face ((t (:foreground "#444444"))))
 '(erc-prompt-face ((t (:background "#223c63" :foreground "white" :box (:line-width 1 :style released-button)))))
 '(erc-timestamp-face ((t (:foreground "#2d412b"))))
 '(flymake-errline ((t :underline "red")))
 '(flymake-warnline ((t :underline "green")))
 '(flyspell-duplicate ((t :underline "yellow")))
 '(flyspell-incorrect ((t :underline "magenta")))
 '(font-lock-builtin-face ((t (:foreground "#59ACC2"))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#888888"))))
 '(font-lock-comment-face ((t (:italic t :foreground "#229988"))))
 '(font-lock-constant-face ((t (:foreground "#6BCFF7"))))
 '(font-lock-function-name-face ((t (:bold t :foreground "#E8BF6A"))))
 '(font-lock-keyword-face ((t (:bold t :foreground "#CC7832"))))
 '(font-lock-preprocessor-face ((t (:background "#202020"))))
 '(font-lock-string-face ((t (:foreground "#A5F26E"))))
 '(font-lock-type-face ((t (:bold t :foreground "#8888ff"))))
 '(font-lock-variable-name-face ((t (:foreground "#D0D0F3"))))
 '(font-lock-warning-face ((t (:underline "red"))))
 '(highlight ((t (:inherit (\` match)))))
 '(hl-line ((t :background "#000000" :underline "#444444")))
 '(ido-first-match ((t (:inherit (quote font-lock-string-face)))))
 '(ido-subdir ((t (:inherit (quote font-lock-function-name-face)))))
 '(magit-branch ((t (:foreground "#E07BE0"))))
 '(magit-diff-add ((t (:inherit (quote diff-added)))))
 '(magit-diff-del ((t (:inherit (quote diff-removed)))))
 '(magit-diff-file-header ((t (:inherit (quote font-lock-constant-face)))))
 '(magit-diff-hunk-header ((t (:inherit (quote font-lock-keyword-face)))))
 '(magit-diff-none ((t (:inherit (quote font-lock-comment-delimiter-face)))))
 '(magit-header ((t (:inherit (quote org-level-1)))))
 '(magit-item-highlight ((t (:background "#000000"))))
 '(match ((t :background "#111111")))
 '(minibuffer-noticeable-prompt ((t (:inherit (quote font-lock-builtin-face) :bold t))))
 '(mode-line-buffer-id ((t (:background nil :foreground "black"))))
 '(mode-line-inactive ((t (:background "#777777" :foreground "#000000" :box (:line-width 1 :style released-button)))))
 '(modeline ((t (:background "#77AA99" :foreground "black" :box (:line-width 1 :style released-button)))))
 '(modeline-mousable ((t (:background "DarkRed" :foreground "white"))))
 '(modeline-mousable-minor-mode ((t (:background "DarkRed" :foreground "white"))))
 '(muse-bad-link ((t (:foreground "#FF8882"))))
 '(muse-header-1 ((t (:foreground "#D6B163" :height 1.5 :inherit variable-pitch))))
 '(muse-header-2 ((t (:foreground "#A5F26E" :height 1.4 :inherit variable-pitch))))
 '(muse-header-3 ((t (:foreground "#4A77DE" :height 1.3 :inherit variable-pitch))))
 '(muse-header-4 ((t (:foreground "#529DB0" :height 1.2 :inherit variable-pitch))))
 '(muse-header-5 ((t (:foreground "#CC7832" :height 1.1 :inherit variable-pitch))))
 '(muse-link ((t (:foreground "#5DA8F6"))))
 '(muse-verbatim ((t (:foreground "#B150E7"))))
 '(nxml-attribute-local-name-face ((t (:inherit (quote font-lock-constant-face)))))
 '(nxml-attribute-value-delimiter-face ((t (:inherit (quote font-lock-string-face)))))
 '(nxml-attribute-value-face ((t (:inherit (quote font-lock-string-face)))))
 '(nxml-cdata-section-content-face ((t (:inherit (quote font-lock-string-face)))))
 '(nxml-comment-content-face ((t (:inherit (quote font-lock-comment-face)))))
 '(nxml-comment-delimiter-face ((t (:inherit (quote font-lock-comment-face)))))
 '(nxml-element-colon-face ((t (:bold t :foreground "#92D229"))))
 '(nxml-element-local-name-face ((t (:inherit (quote font-lock-function-name-face)))))
 '(nxml-element-prefix-face ((t (:bold t :foreground "#92D229"))))
 '(nxml-entity-ref-name-face ((t (:inherit (quote font-lock-constant-face)))))
 '(nxml-tag-delimiter-face ((t (:inherit (quote font-lock-function-name-face)))))
 '(nxml-tag-slash-face ((t (:inherit (quote font-lock-function-name-face)))))
 '(org-agenda-date ((t (:inherit font-lock-type-face))) t)
 '(org-agenda-date-weekend ((t (:inherit org-agenda-date))) t)
 '(org-checkbox ((t (:background "#777777" :foreground "white" :box (:line-width 1 :style released-button)))))
 '(org-checkbox-statistics-done ((t (:background "#447733" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(org-checkbox-statistics-todo ((t (:background "#DD3333" :foreground "white" :box (:line-width 1 :style released-button)))) t)
 '(org-column ((t (:background "#222222"))))
 '(org-column-title ((t (:background "DarkGreen" :foreground "white" :box (:line-width 1 :style released-button)))))
 '(org-date ((t (:foreground "#55DDCC"))))
 '(org-done ((t (:background "#004400" :foreground "white" :box (:line-width 1 :style released-button)))))
 '(org-formula ((t (:foreground "#FF7777"))))
 '(org-hide ((t (:foreground "#191919"))))
 '(org-level-1 ((t (:inherit outline-1))))
 '(org-level-2 ((t (:inherit outline-2))))
 '(org-level-3 ((t (:inherit outline-3))))
 '(org-level-4 ((t (:inherit outline-4))))
 '(org-level-5 ((t (:inherit outline-5))))
 '(org-level-6 ((t (:foreground "#AAEE77"))))
 '(org-level-7 ((t (:foreground "#88CCEE"))))
 '(org-level-8 ((t (:foreground "#EE88FF"))))
 '(org-link ((t (:underline t))))
 '(org-scheduled-previously ((t (:foreground "#d74b4b"))))
 '(org-scheduled-today ((t (:foreground "#ff6ab9" :italic t))))
 '(org-special-keyword ((t (:foreground "#FFFF88"))))
 '(org-table ((t (:foreground "#99DDFF"))))
 '(org-tag ((t (:foreground "#AAAAAA"))))
 '(org-todo ((t (:background "#BB0000" :foreground "white" :box (:line-width 1 :style released-button)))))
 '(org-upcoming-deadline ((t (:foreground "#d6ff9c"))))
 '(org-warning ((t (:foreground "#d74b4b" :italic t :bold t))))
 '(outline-1 ((t (:foreground "#FFBB66" :bold t))))
 '(outline-2 ((t (:foreground "#AAEE77" :bold t))))
 '(outline-3 ((t (:foreground "#88CCEE" :bold t))))
 '(outline-4 ((t (:foreground "#EE88FF" :bold t))))
 '(outline-5 ((t (:foreground "#FFBB66" :bold nil))))
 '(region ((t :background "#505C74")))
 '(show-paren-match ((t (:background "#DA44FF" :foreground "#F6CCFF"))))
 '(show-paren-mismatch ((t (:background "#DA0000" :foreground "#F6CCFF"))))
 '(text-cursor ((t (:background "yellow" :foreground "black"))))
 '(window-number-face ((t (:foreground "#FF7777")))))
